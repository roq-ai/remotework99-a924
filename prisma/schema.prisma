generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model application {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_id           String   @db.Uuid
  user_id          String   @db.Uuid
  application_date DateTime @db.Timestamp(6)
  status           String   @db.VarChar(255)
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  job              job      @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job         job[]
}

model job {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String        @db.VarChar(255)
  description String        @db.VarChar(255)
  key_skills  String        @db.VarChar(255)
  company_id  String        @db.Uuid
  user_id     String        @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  company     company       @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model profile {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  bio            String?  @db.VarChar(255)
  experience     String?  @db.VarChar(255)
  education      String?  @db.VarChar(255)
  portfolio_link String?  @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  company     company[]
  job         job[]
  profile     profile[]
}
